spring:
  application:
    name: kafka-streams-analytics
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka1:9092,kafka2:9094,kafka3:9096}
    schema-registry:
      url: ${SPRING_KAFKA_CONSUMER_PROPERTIES_SCHEMA_REGISTRY_URL:http://schema-registry:8081}
    streams:
      application-id: kafka-streams-analytics
      replication-factor: 3
      num-stream-threads: 2
      state:
        dir: /data/kafka-streams
# Custom producer topics configuration
producer:
  topics:
    stock-protobuf: stock-prices-protobuf
    user-events-protobuf: user-events-protobuf
    sensors-avro: iot-sensors-avro
    weather-avro: weather-data-avro

# Output topics (generated by streams processing)
output:
  topics:
    stock-moving-average-alerts: stock-moving-average-alerts
    volume-surge-alerts: volume-surge-alerts
    user-journey-analytics: user-journey-analytics
    user-segmentation: user-segmentation
    conversions: conversions
    sensor-maintenance-alerts: sensor-maintenance-alerts
    sensor-weather-correlations: sensor-weather-correlations
    stock-interest-correlations: stock-interest-correlations
    market-overview-feed: market-overview-feed
management:
  endpoints:
    web:
      exposure:
        include: prometheus
