version: '3.8'
services:
  kafka:
    image: apache/kafka:4.0.0
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: CLIENT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: CLIENT://kafka:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - kafka-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  kafka-producer:
    image: kafkaproducer:0.0.1-snapshot
    ports:
      - "8083:8083"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - kafka-network
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

  kafka-consumer:
    image: kafkaconsumer:0.0.1-snapshot
    ports:
      - "8082:8082"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - kafka-network
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

networks:
  kafka-network:
    driver: bridge

volumes:
  kafka-data: